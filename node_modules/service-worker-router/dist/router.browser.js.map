{"version":3,"file":"router.browser.js","sources":["../node_modules/url-pattern/lib/url-pattern.js","../src/router.ts"],"sourcesContent":["// Generated by CoffeeScript 1.10.0\nvar slice = [].slice;\n\n(function(root, factory) {\n  if (('function' === typeof define) && (define.amd != null)) {\n    return define([], factory);\n  } else if (typeof exports !== \"undefined\" && exports !== null) {\n    return module.exports = factory();\n  } else {\n    return root.UrlPattern = factory();\n  }\n})(this, function() {\n  var P, UrlPattern, astNodeContainsSegmentsForProvidedParams, astNodeToNames, astNodeToRegexString, baseAstNodeToRegexString, concatMap, defaultOptions, escapeForRegex, getParam, keysAndValuesToObject, newParser, regexGroupCount, stringConcatMap, stringify;\n  escapeForRegex = function(string) {\n    return string.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  };\n  concatMap = function(array, f) {\n    var i, length, results;\n    results = [];\n    i = -1;\n    length = array.length;\n    while (++i < length) {\n      results = results.concat(f(array[i]));\n    }\n    return results;\n  };\n  stringConcatMap = function(array, f) {\n    var i, length, result;\n    result = '';\n    i = -1;\n    length = array.length;\n    while (++i < length) {\n      result += f(array[i]);\n    }\n    return result;\n  };\n  regexGroupCount = function(regex) {\n    return (new RegExp(regex.toString() + '|')).exec('').length - 1;\n  };\n  keysAndValuesToObject = function(keys, values) {\n    var i, key, length, object, value;\n    object = {};\n    i = -1;\n    length = keys.length;\n    while (++i < length) {\n      key = keys[i];\n      value = values[i];\n      if (value == null) {\n        continue;\n      }\n      if (object[key] != null) {\n        if (!Array.isArray(object[key])) {\n          object[key] = [object[key]];\n        }\n        object[key].push(value);\n      } else {\n        object[key] = value;\n      }\n    }\n    return object;\n  };\n  P = {};\n  P.Result = function(value, rest) {\n    this.value = value;\n    this.rest = rest;\n  };\n  P.Tagged = function(tag, value) {\n    this.tag = tag;\n    this.value = value;\n  };\n  P.tag = function(tag, parser) {\n    return function(input) {\n      var result, tagged;\n      result = parser(input);\n      if (result == null) {\n        return;\n      }\n      tagged = new P.Tagged(tag, result.value);\n      return new P.Result(tagged, result.rest);\n    };\n  };\n  P.regex = function(regex) {\n    return function(input) {\n      var matches, result;\n      matches = regex.exec(input);\n      if (matches == null) {\n        return;\n      }\n      result = matches[0];\n      return new P.Result(result, input.slice(result.length));\n    };\n  };\n  P.sequence = function() {\n    var parsers;\n    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return function(input) {\n      var i, length, parser, rest, result, values;\n      i = -1;\n      length = parsers.length;\n      values = [];\n      rest = input;\n      while (++i < length) {\n        parser = parsers[i];\n        result = parser(rest);\n        if (result == null) {\n          return;\n        }\n        values.push(result.value);\n        rest = result.rest;\n      }\n      return new P.Result(values, rest);\n    };\n  };\n  P.pick = function() {\n    var indexes, parsers;\n    indexes = arguments[0], parsers = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return function(input) {\n      var array, result;\n      result = P.sequence.apply(P, parsers)(input);\n      if (result == null) {\n        return;\n      }\n      array = result.value;\n      result.value = array[indexes];\n      return result;\n    };\n  };\n  P.string = function(string) {\n    var length;\n    length = string.length;\n    return function(input) {\n      if (input.slice(0, length) === string) {\n        return new P.Result(string, input.slice(length));\n      }\n    };\n  };\n  P.lazy = function(fn) {\n    var cached;\n    cached = null;\n    return function(input) {\n      if (cached == null) {\n        cached = fn();\n      }\n      return cached(input);\n    };\n  };\n  P.baseMany = function(parser, end, stringResult, atLeastOneResultRequired, input) {\n    var endResult, parserResult, rest, results;\n    rest = input;\n    results = stringResult ? '' : [];\n    while (true) {\n      if (end != null) {\n        endResult = end(rest);\n        if (endResult != null) {\n          break;\n        }\n      }\n      parserResult = parser(rest);\n      if (parserResult == null) {\n        break;\n      }\n      if (stringResult) {\n        results += parserResult.value;\n      } else {\n        results.push(parserResult.value);\n      }\n      rest = parserResult.rest;\n    }\n    if (atLeastOneResultRequired && results.length === 0) {\n      return;\n    }\n    return new P.Result(results, rest);\n  };\n  P.many1 = function(parser) {\n    return function(input) {\n      return P.baseMany(parser, null, false, true, input);\n    };\n  };\n  P.concatMany1Till = function(parser, end) {\n    return function(input) {\n      return P.baseMany(parser, end, true, true, input);\n    };\n  };\n  P.firstChoice = function() {\n    var parsers;\n    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return function(input) {\n      var i, length, parser, result;\n      i = -1;\n      length = parsers.length;\n      while (++i < length) {\n        parser = parsers[i];\n        result = parser(input);\n        if (result != null) {\n          return result;\n        }\n      }\n    };\n  };\n  newParser = function(options) {\n    var U;\n    U = {};\n    U.wildcard = P.tag('wildcard', P.string(options.wildcardChar));\n    U.optional = P.tag('optional', P.pick(1, P.string(options.optionalSegmentStartChar), P.lazy(function() {\n      return U.pattern;\n    }), P.string(options.optionalSegmentEndChar)));\n    U.name = P.regex(new RegExp(\"^[\" + options.segmentNameCharset + \"]+\"));\n    U.named = P.tag('named', P.pick(1, P.string(options.segmentNameStartChar), P.lazy(function() {\n      return U.name;\n    })));\n    U.escapedChar = P.pick(1, P.string(options.escapeChar), P.regex(/^./));\n    U[\"static\"] = P.tag('static', P.concatMany1Till(P.firstChoice(P.lazy(function() {\n      return U.escapedChar;\n    }), P.regex(/^./)), P.firstChoice(P.string(options.segmentNameStartChar), P.string(options.optionalSegmentStartChar), P.string(options.optionalSegmentEndChar), U.wildcard)));\n    U.token = P.lazy(function() {\n      return P.firstChoice(U.wildcard, U.optional, U.named, U[\"static\"]);\n    });\n    U.pattern = P.many1(P.lazy(function() {\n      return U.token;\n    }));\n    return U;\n  };\n  defaultOptions = {\n    escapeChar: '\\\\',\n    segmentNameStartChar: ':',\n    segmentValueCharset: 'a-zA-Z0-9-_~ %',\n    segmentNameCharset: 'a-zA-Z0-9',\n    optionalSegmentStartChar: '(',\n    optionalSegmentEndChar: ')',\n    wildcardChar: '*'\n  };\n  baseAstNodeToRegexString = function(astNode, segmentValueCharset) {\n    if (Array.isArray(astNode)) {\n      return stringConcatMap(astNode, function(node) {\n        return baseAstNodeToRegexString(node, segmentValueCharset);\n      });\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return '(.*?)';\n      case 'named':\n        return \"([\" + segmentValueCharset + \"]+)\";\n      case 'static':\n        return escapeForRegex(astNode.value);\n      case 'optional':\n        return '(?:' + baseAstNodeToRegexString(astNode.value, segmentValueCharset) + ')?';\n    }\n  };\n  astNodeToRegexString = function(astNode, segmentValueCharset) {\n    if (segmentValueCharset == null) {\n      segmentValueCharset = defaultOptions.segmentValueCharset;\n    }\n    return '^' + baseAstNodeToRegexString(astNode, segmentValueCharset) + '$';\n  };\n  astNodeToNames = function(astNode) {\n    if (Array.isArray(astNode)) {\n      return concatMap(astNode, astNodeToNames);\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return ['_'];\n      case 'named':\n        return [astNode.value];\n      case 'static':\n        return [];\n      case 'optional':\n        return astNodeToNames(astNode.value);\n    }\n  };\n  getParam = function(params, key, nextIndexes, sideEffects) {\n    var index, maxIndex, result, value;\n    if (sideEffects == null) {\n      sideEffects = false;\n    }\n    value = params[key];\n    if (value == null) {\n      if (sideEffects) {\n        throw new Error(\"no values provided for key `\" + key + \"`\");\n      } else {\n        return;\n      }\n    }\n    index = nextIndexes[key] || 0;\n    maxIndex = Array.isArray(value) ? value.length - 1 : 0;\n    if (index > maxIndex) {\n      if (sideEffects) {\n        throw new Error(\"too few values provided for key `\" + key + \"`\");\n      } else {\n        return;\n      }\n    }\n    result = Array.isArray(value) ? value[index] : value;\n    if (sideEffects) {\n      nextIndexes[key] = index + 1;\n    }\n    return result;\n  };\n  astNodeContainsSegmentsForProvidedParams = function(astNode, params, nextIndexes) {\n    var i, length;\n    if (Array.isArray(astNode)) {\n      i = -1;\n      length = astNode.length;\n      while (++i < length) {\n        if (astNodeContainsSegmentsForProvidedParams(astNode[i], params, nextIndexes)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return getParam(params, '_', nextIndexes, false) != null;\n      case 'named':\n        return getParam(params, astNode.value, nextIndexes, false) != null;\n      case 'static':\n        return false;\n      case 'optional':\n        return astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes);\n    }\n  };\n  stringify = function(astNode, params, nextIndexes) {\n    if (Array.isArray(astNode)) {\n      return stringConcatMap(astNode, function(node) {\n        return stringify(node, params, nextIndexes);\n      });\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return getParam(params, '_', nextIndexes, true);\n      case 'named':\n        return getParam(params, astNode.value, nextIndexes, true);\n      case 'static':\n        return astNode.value;\n      case 'optional':\n        if (astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes)) {\n          return stringify(astNode.value, params, nextIndexes);\n        } else {\n          return '';\n        }\n    }\n  };\n  UrlPattern = function(arg1, arg2) {\n    var groupCount, options, parsed, parser, withoutWhitespace;\n    if (arg1 instanceof UrlPattern) {\n      this.isRegex = arg1.isRegex;\n      this.regex = arg1.regex;\n      this.ast = arg1.ast;\n      this.names = arg1.names;\n      return;\n    }\n    this.isRegex = arg1 instanceof RegExp;\n    if (!(('string' === typeof arg1) || this.isRegex)) {\n      throw new TypeError('argument must be a regex or a string');\n    }\n    if (this.isRegex) {\n      this.regex = arg1;\n      if (arg2 != null) {\n        if (!Array.isArray(arg2)) {\n          throw new Error('if first argument is a regex the second argument may be an array of group names but you provided something else');\n        }\n        groupCount = regexGroupCount(this.regex);\n        if (arg2.length !== groupCount) {\n          throw new Error(\"regex contains \" + groupCount + \" groups but array of group names contains \" + arg2.length);\n        }\n        this.names = arg2;\n      }\n      return;\n    }\n    if (arg1 === '') {\n      throw new Error('argument must not be the empty string');\n    }\n    withoutWhitespace = arg1.replace(/\\s+/g, '');\n    if (withoutWhitespace !== arg1) {\n      throw new Error('argument must not contain whitespace');\n    }\n    options = {\n      escapeChar: (arg2 != null ? arg2.escapeChar : void 0) || defaultOptions.escapeChar,\n      segmentNameStartChar: (arg2 != null ? arg2.segmentNameStartChar : void 0) || defaultOptions.segmentNameStartChar,\n      segmentNameCharset: (arg2 != null ? arg2.segmentNameCharset : void 0) || defaultOptions.segmentNameCharset,\n      segmentValueCharset: (arg2 != null ? arg2.segmentValueCharset : void 0) || defaultOptions.segmentValueCharset,\n      optionalSegmentStartChar: (arg2 != null ? arg2.optionalSegmentStartChar : void 0) || defaultOptions.optionalSegmentStartChar,\n      optionalSegmentEndChar: (arg2 != null ? arg2.optionalSegmentEndChar : void 0) || defaultOptions.optionalSegmentEndChar,\n      wildcardChar: (arg2 != null ? arg2.wildcardChar : void 0) || defaultOptions.wildcardChar\n    };\n    parser = newParser(options);\n    parsed = parser.pattern(arg1);\n    if (parsed == null) {\n      throw new Error(\"couldn't parse pattern\");\n    }\n    if (parsed.rest !== '') {\n      throw new Error(\"could only partially parse pattern\");\n    }\n    this.ast = parsed.value;\n    this.regex = new RegExp(astNodeToRegexString(this.ast, options.segmentValueCharset));\n    this.names = astNodeToNames(this.ast);\n  };\n  UrlPattern.prototype.match = function(url) {\n    var groups, match;\n    match = this.regex.exec(url);\n    if (match == null) {\n      return null;\n    }\n    groups = match.slice(1);\n    if (this.names) {\n      return keysAndValuesToObject(this.names, groups);\n    } else {\n      return groups;\n    }\n  };\n  UrlPattern.prototype.stringify = function(params) {\n    if (params == null) {\n      params = {};\n    }\n    if (this.isRegex) {\n      throw new Error(\"can't stringify patterns generated from a regex\");\n    }\n    if (params !== Object(params)) {\n      throw new Error(\"argument must be an object or undefined\");\n    }\n    return stringify(this.ast, params, {});\n  };\n  UrlPattern.escapeForRegex = escapeForRegex;\n  UrlPattern.concatMap = concatMap;\n  UrlPattern.stringConcatMap = stringConcatMap;\n  UrlPattern.regexGroupCount = regexGroupCount;\n  UrlPattern.keysAndValuesToObject = keysAndValuesToObject;\n  UrlPattern.P = P;\n  UrlPattern.newParser = newParser;\n  UrlPattern.defaultOptions = defaultOptions;\n  UrlPattern.astNodeToRegexString = astNodeToRegexString;\n  UrlPattern.astNodeToNames = astNodeToNames;\n  UrlPattern.getParam = getParam;\n  UrlPattern.astNodeContainsSegmentsForProvidedParams = astNodeContainsSegmentsForProvidedParams;\n  UrlPattern.stringify = stringify;\n  return UrlPattern;\n});\n","import UrlPattern from 'url-pattern'\n\n// https://basarat.gitbooks.io/typescript/docs/tips/barrel.html\nexport { UrlPattern }\n\nconst patternOpts = {\n  segmentNameCharset: 'a-zA-Z0-9_-',\n  segmentValueCharset: 'a-zA-Z0-9@.+-_'\n}\n\nexport type HandlerPromise = Promise<Response | any | void>\n\nexport type HandlerFunction = (...args: any[]) => HandlerPromise\n\nexport interface HandlerContext extends MatchResult {}\n\nexport interface RouteOptions {\n  method?: string\n  matchUrl?: boolean\n}\n\nexport interface Route {\n  pattern: UrlPattern\n  handler: HandlerFunction\n  options: RouteOptions\n}\n\nexport interface MatchResult {\n  params: any | null\n  handler: HandlerFunction\n  url: URL\n  method: string\n  route: Route\n  request?: Request\n  event?: FetchEvent\n}\n\nexport interface HandleResult {\n  match: MatchResult\n  handlerPromise: HandlerPromise\n}\n\nexport class Router {\n  private routes: Array<Route> = []\n\n  public all (\n    pattern: string | UrlPattern,\n    handler: HandlerFunction,\n    options: RouteOptions = {}\n  ): Router {\n    return this.addRoute(pattern, handler, { ...options, method: '' })\n  }\n  public get (\n    pattern: string | UrlPattern,\n    handler: HandlerFunction,\n    options: RouteOptions = {}\n  ): Router {\n    return this.addRoute(pattern, handler, { ...options, method: 'GET' })\n  }\n  public post (\n    pattern: string | UrlPattern,\n    handler: HandlerFunction,\n    options: RouteOptions = {}\n  ): Router {\n    return this.addRoute(pattern, handler, { ...options, method: 'POST' })\n  }\n  public put (\n    pattern: string | UrlPattern,\n    handler: HandlerFunction,\n    options: RouteOptions = {}\n  ): Router {\n    return this.addRoute(pattern, handler, { ...options, method: 'PUT' })\n  }\n  public patch (\n    pattern: string | UrlPattern,\n    handler: HandlerFunction,\n    options: RouteOptions = {}\n  ): Router {\n    return this.addRoute(pattern, handler, { ...options, method: 'PATCH' })\n  }\n  public delete (\n    pattern: string | UrlPattern,\n    handler: HandlerFunction,\n    options: RouteOptions = {}\n  ): Router {\n    return this.addRoute(pattern, handler, { ...options, method: 'DELETE' })\n  }\n  public head (\n    pattern: string | UrlPattern,\n    handler: HandlerFunction,\n    options: RouteOptions = {}\n  ): Router {\n    return this.addRoute(pattern, handler, { ...options, method: 'HEAD' })\n  }\n  public options (\n    pattern: string | UrlPattern,\n    handler: HandlerFunction,\n    options: RouteOptions = {}\n  ): Router {\n    return this.addRoute(pattern, handler, { ...options, method: 'OPTIONS' })\n  }\n\n  private addRoute (\n    pattern: string | UrlPattern,\n    handler: HandlerFunction,\n    options: RouteOptions = {}\n  ): Router {\n    if (!(pattern instanceof UrlPattern)) {\n      pattern = new UrlPattern(pattern, patternOpts)\n    }\n    this.routes.push({ pattern, handler, options })\n    return this\n  }\n\n  public match (url: URL | string, method: string): MatchResult | null {\n    if (!(url instanceof URL)) {\n      url = url.startsWith('/') ? new URL(`http://domain${url}`) : new URL(url)\n    }\n    for (const route of this.routes) {\n      const { pattern, options, handler } = route\n      if (options.method && options.method !== method) continue\n      const params = pattern.match(options.matchUrl ? url.href : url.pathname)\n      if (params) return { params, handler, url, method, route }\n    }\n    return null\n  }\n\n  public matchRequest (request: Request): MatchResult | null {\n    return this.match(request.url, request.method)\n  }\n\n  public matchEvent (event: FetchEvent): MatchResult | null {\n    return this.matchRequest(event.request)\n  }\n\n  public handle (url: URL | string, method: string): HandleResult | null {\n    const match = this.match(url, method)\n    if (!match) return null\n    const context = { ...match }\n    const handlerPromise = match.handler(context as HandlerContext)\n    return { handlerPromise, match: context }\n  }\n\n  public handleRequest (request: Request): HandleResult | null {\n    const match = this.matchRequest(request)\n    if (!match) return null\n    const context = { ...match, request } as HandlerContext\n    const handlerPromise = match.handler(context)\n    return { handlerPromise, match: context }\n  }\n\n  public handleEvent (event: FetchEvent): HandleResult | null {\n    const request = event.request\n    const match = this.matchRequest(request)\n    if (!match) return null\n    const context = { ...match, request, event } as HandlerContext\n    const handlerPromise = match.handler(context)\n    event.respondWith(handlerPromise)\n    return { handlerPromise, match: context }\n  }\n\n  public clear () {\n    this.routes.length = 0\n  }\n}\n"],"names":["this","UrlPattern"],"mappings":"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"}